'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};exports.shallow=shallow;exports.mount=mount;exports.render=render;exports.makeRenderer=makeRenderer;var _react=require('react');var _enzyme=require('enzyme');function shallow(elem,opts,classNames){var wrapper=(0,_enzyme.shallow)(elem,opts);return activate(function(){return wrapper},classNames)}function mount(elem,opts,classNames){var wrapper=(0,_enzyme.mount)(elem,opts);return activate(function(){return wrapper},classNames)}function render(elem,opts,classNames){var wrapper=(0,_enzyme.render)(elem,opts);return activate(function(){return wrapper},classNames)}function makeRenderer(component){var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _ref$method=_ref.method;var method=_ref$method===undefined?shallow:_ref$method;var _ref$defaultProps=_ref.defaultProps;var defaultProps=_ref$defaultProps===undefined?{}:_ref$defaultProps;var _ref$transform=_ref.transform;var transform=_ref$transform===undefined?function(props){return props}:_ref$transform;var classNames=_ref.classNames;var enzymeOptions=_ref.enzymeOptions;var doTransform=function doTransform(props){return removeUndefined(transform(props))};return function(){var props=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};props=_extends({},defaultProps,props);return method((0,_react.createElement)(component,doTransform(props)),enzymeOptions,classNames)}}function activate(findMyself,classNames){var find=function find(){for(var _len=arguments.length,findArgs=Array(_len),_key=0;_key<_len;_key++){findArgs[_key]=arguments[_key]}return activate(function(){var _findMyself;return(_findMyself=findMyself()).find.apply(_findMyself,findArgs)})};var classes=new Proxy({},{get:function get(target,name){if(classNames)name=classNames[name];var selector=name.split(' ').map(function(part){return'.'+part}).join('');return find(selector)}});var overrides={find:find,classes:classes};return new Proxy(findMyself(),{get:function get(target,key){return overrides[key]||findMyself()[key]}})}function removeUndefined(obj){var result=_extends({},obj);for(var key in result){if(result[key]===undefined)delete result[key]}return result}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGl2ZS1lbnp5bWUuanMiXSwibmFtZXMiOlsic2hhbGxvdyIsIm1vdW50IiwicmVuZGVyIiwibWFrZVJlbmRlcmVyIiwiZWxlbSIsIm9wdHMiLCJjbGFzc05hbWVzIiwid3JhcHBlciIsImFjdGl2YXRlIiwiY29tcG9uZW50IiwibWV0aG9kIiwiZGVmYXVsdFByb3BzIiwidHJhbnNmb3JtIiwicHJvcHMiLCJlbnp5bWVPcHRpb25zIiwiZG9UcmFuc2Zvcm0iLCJyZW1vdmVVbmRlZmluZWQiLCJmaW5kTXlzZWxmIiwiZmluZCIsImZpbmRBcmdzIiwiY2xhc3NlcyIsIlByb3h5IiwiZ2V0IiwidGFyZ2V0IiwibmFtZSIsInNlbGVjdG9yIiwic3BsaXQiLCJtYXAiLCJwYXJ0Iiwiam9pbiIsIm92ZXJyaWRlcyIsImtleSIsIm9iaiIsInJlc3VsdCIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6IjRTQVFnQkEsTyxDQUFBQSxPLFNBS0FDLEssQ0FBQUEsSyxTQUtBQyxNLENBQUFBLE0sU0FLQUMsWSxDQUFBQSxZLENBdkJoQiw0QkFFQSw4QkFNTyxRQUFTSCxRQUFULENBQWlCSSxJQUFqQixDQUF1QkMsSUFBdkIsQ0FBNkJDLFVBQTdCLENBQXlDLENBQzlDLEdBQU1DLFNBQVUsb0JBQWNILElBQWQsQ0FBb0JDLElBQXBCLENBQWhCLENBQ0EsTUFBT0csVUFBUyxpQkFBTUQsUUFBTixDQUFULENBQXdCRCxVQUF4QixDQUNSLENBRU0sUUFBU0wsTUFBVCxDQUFlRyxJQUFmLENBQXFCQyxJQUFyQixDQUEyQkMsVUFBM0IsQ0FBdUMsQ0FDNUMsR0FBTUMsU0FBVSxrQkFBWUgsSUFBWixDQUFrQkMsSUFBbEIsQ0FBaEIsQ0FDQSxNQUFPRyxVQUFTLGlCQUFNRCxRQUFOLENBQVQsQ0FBd0JELFVBQXhCLENBQ1IsQ0FFTSxRQUFTSixPQUFULENBQWdCRSxJQUFoQixDQUFzQkMsSUFBdEIsQ0FBNEJDLFVBQTVCLENBQXdDLENBQzdDLEdBQU1DLFNBQVUsbUJBQWFILElBQWIsQ0FBbUJDLElBQW5CLENBQWhCLENBQ0EsTUFBT0csVUFBUyxpQkFBTUQsUUFBTixDQUFULENBQXdCRCxVQUF4QixDQUNSLENBRU0sUUFBU0gsYUFBVCxDQUFzQk0sU0FBdEIsQ0FNQyxvRUFBSixFQUFJLHNCQUxOQyxNQUtNLElBTE5BLE9BS00seUJBTEdWLE9BS0gsd0NBSk5XLFlBSU0sSUFKTkEsYUFJTSwrQkFKUyxFQUlULDJDQUhOQyxTQUdNLElBSE5BLFVBR00sNEJBSE0sc0JBQVNDLE1BQVQsQ0FHTixtQkFGTlAsV0FFTSxNQUZOQSxVQUVNLElBRE5RLGNBQ00sTUFETkEsYUFDTSxDQUNOLEdBQU1DLGFBQWMsUUFBZEEsWUFBYyxjQUFTQyxpQkFBZ0JKLFVBQVVDLEtBQVYsQ0FBaEIsQ0FBVCxDQUFwQixDQUNBLE1BQU8sV0FBZ0IsSUFBZkEsTUFBZSwyREFBUCxFQUFPLENBQ3JCQSxrQkFBYUYsWUFBYixDQUE4QkUsS0FBOUIsRUFDQSxNQUFPSCxRQUFPLHlCQUFjRCxTQUFkLENBQXlCTSxZQUFZRixLQUFaLENBQXpCLENBQVAsQ0FBcURDLGFBQXJELENBQW9FUixVQUFwRSxDQUNSLENBQ0YsQ0FFRCxRQUFTRSxTQUFULENBQWtCUyxVQUFsQixDQUE4QlgsVUFBOUIsQ0FBMEMsQ0FDeEMsR0FBTVksTUFBTyxRQUFQQSxLQUFPLGlDQUFJQyxRQUFKLHNDQUFJQSxRQUFKLDZCQUFpQlgsVUFBUyxpQ0FBTSwyQkFBYVUsSUFBYixtQkFBcUJDLFFBQXJCLENBQU4sQ0FBVCxDQUFqQixDQUFiLENBQ0EsR0FBTUMsU0FBVSxHQUFJQyxNQUFKLENBQVUsRUFBVixDQUFjLENBQzVCQyxHQUQ0QixjQUN4QkMsTUFEd0IsQ0FDaEJDLElBRGdCLENBQ1YsQ0FDaEIsR0FBSWxCLFVBQUosQ0FDRWtCLEtBQU9sQixXQUFXa0IsSUFBWCxDQUFQLENBQ0YsR0FBTUMsVUFBV0QsS0FBS0UsS0FBTCxDQUFXLEdBQVgsRUFBZ0JDLEdBQWhCLENBQW9CLHFCQUFRLElBQU1DLElBQWQsQ0FBcEIsRUFBd0NDLElBQXhDLENBQTZDLEVBQTdDLENBQWpCLENBQ0EsTUFBT1gsTUFBS08sUUFBTCxDQUNSLENBTjJCLENBQWQsQ0FBaEIsQ0FRQSxHQUFNSyxXQUFZLENBQUVaLFNBQUYsQ0FBUUUsZUFBUixDQUFsQixDQUNBLE1BQU8sSUFBSUMsTUFBSixDQUFVSixZQUFWLENBQXdCLENBQzdCSyxHQUQ2QixjQUN6QkMsTUFEeUIsQ0FDakJRLEdBRGlCLENBQ1osQ0FDZixNQUFPRCxXQUFVQyxHQUFWLEdBQWtCZCxhQUFhYyxHQUFiLENBQzFCLENBSDRCLENBQXhCLENBS1IsQ0FFRCxRQUFTZixnQkFBVCxDQUF5QmdCLEdBQXpCLENBQThCLENBQzFCLEdBQU1DLG9CQUFjRCxHQUFkLENBQU4sQ0FDQSxJQUFLLEdBQU1ELElBQVgsR0FBa0JFLE9BQWxCLENBQTBCLENBQ3RCLEdBQUlBLE9BQU9GLEdBQVAsSUFBZ0JHLFNBQXBCLENBQ0ksTUFBT0QsUUFBT0YsR0FBUCxDQUNkLENBQ0QsTUFBT0UsT0FDViIsImZpbGUiOiJhY3RpdmUtZW56eW1lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQge1xuICBzaGFsbG93IGFzIGVuenltZVNoYWxsb3csXG4gIG1vdW50IGFzIGVuenltZU1vdW50LFxuICByZW5kZXIgYXMgZW56eW1lUmVuZGVyLFxufSBmcm9tICdlbnp5bWUnXG5cbmV4cG9ydCBmdW5jdGlvbiBzaGFsbG93KGVsZW0sIG9wdHMsIGNsYXNzTmFtZXMpIHtcbiAgY29uc3Qgd3JhcHBlciA9IGVuenltZVNoYWxsb3coZWxlbSwgb3B0cylcbiAgcmV0dXJuIGFjdGl2YXRlKCgpID0+IHdyYXBwZXIsIGNsYXNzTmFtZXMpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb3VudChlbGVtLCBvcHRzLCBjbGFzc05hbWVzKSB7XG4gIGNvbnN0IHdyYXBwZXIgPSBlbnp5bWVNb3VudChlbGVtLCBvcHRzKVxuICByZXR1cm4gYWN0aXZhdGUoKCkgPT4gd3JhcHBlciwgY2xhc3NOYW1lcylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihlbGVtLCBvcHRzLCBjbGFzc05hbWVzKSB7XG4gIGNvbnN0IHdyYXBwZXIgPSBlbnp5bWVSZW5kZXIoZWxlbSwgb3B0cylcbiAgcmV0dXJuIGFjdGl2YXRlKCgpID0+IHdyYXBwZXIsIGNsYXNzTmFtZXMpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlUmVuZGVyZXIoY29tcG9uZW50LCB7XG4gIG1ldGhvZCA9IHNoYWxsb3csXG4gIGRlZmF1bHRQcm9wcyA9IHt9LFxuICB0cmFuc2Zvcm0gPSBwcm9wcyA9PiBwcm9wcyxcbiAgY2xhc3NOYW1lcyxcbiAgZW56eW1lT3B0aW9ucyxcbn0gPSB7fSkge1xuICBjb25zdCBkb1RyYW5zZm9ybSA9IHByb3BzID0+IHJlbW92ZVVuZGVmaW5lZCh0cmFuc2Zvcm0ocHJvcHMpKVxuICByZXR1cm4gKHByb3BzID0ge30pID0+IHtcbiAgICBwcm9wcyA9IHsgLi4uZGVmYXVsdFByb3BzLCAuLi5wcm9wcyB9XG4gICAgcmV0dXJuIG1ldGhvZChjcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgZG9UcmFuc2Zvcm0ocHJvcHMpKSwgZW56eW1lT3B0aW9ucywgY2xhc3NOYW1lcylcbiAgfVxufVxuXG5mdW5jdGlvbiBhY3RpdmF0ZShmaW5kTXlzZWxmLCBjbGFzc05hbWVzKSB7XG4gIGNvbnN0IGZpbmQgPSAoLi4uZmluZEFyZ3MpID0+IGFjdGl2YXRlKCgpID0+IGZpbmRNeXNlbGYoKS5maW5kKC4uLmZpbmRBcmdzKSlcbiAgY29uc3QgY2xhc3NlcyA9IG5ldyBQcm94eSh7fSwge1xuICAgIGdldCh0YXJnZXQsIG5hbWUpIHtcbiAgICAgIGlmIChjbGFzc05hbWVzKVxuICAgICAgICBuYW1lID0gY2xhc3NOYW1lc1tuYW1lXVxuICAgICAgY29uc3Qgc2VsZWN0b3IgPSBuYW1lLnNwbGl0KCcgJykubWFwKHBhcnQgPT4gJy4nICsgcGFydCkuam9pbignJylcbiAgICAgIHJldHVybiBmaW5kKHNlbGVjdG9yKVxuICAgIH1cbiAgfSlcbiAgY29uc3Qgb3ZlcnJpZGVzID0geyBmaW5kLCBjbGFzc2VzIH1cbiAgcmV0dXJuIG5ldyBQcm94eShmaW5kTXlzZWxmKCksIHtcbiAgICBnZXQodGFyZ2V0LCBrZXkpIHtcbiAgICAgIHJldHVybiBvdmVycmlkZXNba2V5XSB8fCBmaW5kTXlzZWxmKClba2V5XVxuICAgIH1cbiAgfSlcbn1cblxuZnVuY3Rpb24gcmVtb3ZlVW5kZWZpbmVkKG9iaikge1xuICAgIGNvbnN0IHJlc3VsdCA9IHsgLi4ub2JqIH1cbiAgICBmb3IgKGNvbnN0IGtleSBpbiByZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdFtrZXldID09PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBkZWxldGUgcmVzdWx0W2tleV1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdFxufVxuIl19
