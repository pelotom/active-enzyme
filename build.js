'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};exports.shallow=shallow;exports.mount=mount;exports.render=render;exports.makeAnalyzer=makeAnalyzer;var _react=require('react');var _enzyme=require('enzyme');function shallow(){var wrapper=_enzyme.shallow.apply(undefined,arguments);return activate(function(){return wrapper})}function mount(){var wrapper=_enzyme.mount.apply(undefined,arguments);return activate(function(){return wrapper})}function render(){var wrapper=_enzyme.render.apply(undefined,arguments);return activate(function(){return wrapper})}function makeAnalyzer(component,styles){var opts=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var transform=function(transform){return function(props){return removeUndefined(transform(props))}}(opts.transform||function(props){return props});var render=opts.type||shallow;return function(){var props=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return render((0,_react.createElement)(component,transform(props))).lookup(styles)}}function activate(findMyself){return new Proxy(findMyself(),{get:function get(target,key){var find=function find(){for(var _len=arguments.length,findArgs=Array(_len),_key=0;_key<_len;_key++){findArgs[_key]=arguments[_key]}return activate(function(){var _findMyself;return(_findMyself=findMyself()).find.apply(_findMyself,findArgs)})};switch(key){case'find':return find;case'lookup':return function(classMap){return new Proxy({},{get:function get(target,name){if(classMap)name=classMap[name].split(' ')[0];return find('.'+name)}})};default:return findMyself()[key];}}})}function removeUndefined(obj){var result=_extends({},obj);for(var key in result){if(result[key]===undefined)delete result[key]}return result}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGl2ZS1lbnp5bWUuanMiXSwibmFtZXMiOlsic2hhbGxvdyIsIm1vdW50IiwicmVuZGVyIiwibWFrZUFuYWx5emVyIiwid3JhcHBlciIsImFjdGl2YXRlIiwiY29tcG9uZW50Iiwic3R5bGVzIiwib3B0cyIsInRyYW5zZm9ybSIsInJlbW92ZVVuZGVmaW5lZCIsInByb3BzIiwidHlwZSIsImxvb2t1cCIsImZpbmRNeXNlbGYiLCJQcm94eSIsImdldCIsInRhcmdldCIsImtleSIsImZpbmQiLCJmaW5kQXJncyIsIm5hbWUiLCJjbGFzc01hcCIsInNwbGl0Iiwib2JqIiwicmVzdWx0IiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiNFNBUWdCQSxPLENBQUFBLE8sU0FLQUMsSyxDQUFBQSxLLFNBS0FDLE0sQ0FBQUEsTSxTQUtBQyxZLENBQUFBLFksQ0F2QmhCLDRCQUVBLDhCQU1PLFFBQVNILFFBQVQsRUFBMEIsQ0FDL0IsR0FBTUksU0FBVSwwQ0FBaEIsQ0FDQSxNQUFPQyxVQUFTLGlCQUFNRCxRQUFOLENBQVQsQ0FDUixDQUVNLFFBQVNILE1BQVQsRUFBd0IsQ0FDN0IsR0FBTUcsU0FBVSx3Q0FBaEIsQ0FDQSxNQUFPQyxVQUFTLGlCQUFNRCxRQUFOLENBQVQsQ0FDUixDQUVNLFFBQVNGLE9BQVQsRUFBeUIsQ0FDOUIsR0FBTUUsU0FBVSx5Q0FBaEIsQ0FDQSxNQUFPQyxVQUFTLGlCQUFNRCxRQUFOLENBQVQsQ0FDUixDQUVNLFFBQVNELGFBQVQsQ0FBc0JHLFNBQXRCLENBQWlDQyxNQUFqQyxDQUFvRCxJQUFYQyxLQUFXLDJEQUFKLEVBQUksQ0FDdkQsR0FBTUMsV0FBYSwwQkFBYSx1QkFBU0MsaUJBQWdCRCxVQUFVRSxLQUFWLENBQWhCLENBQVQsQ0FBYixDQUFELENBQTBESCxLQUFLQyxTQUFMLEVBQW1CLHNCQUFTRSxNQUFULENBQTdFLENBQWxCLENBRUEsR0FBTVQsUUFBU00sS0FBS0ksSUFBTCxFQUFhWixPQUE1QixDQUVBLE1BQU8sZUFBQ1csTUFBRCwyREFBUyxFQUFULE9BQWdCVCxRQUFPLHlCQUFjSSxTQUFkLENBQXlCRyxVQUFVRSxLQUFWLENBQXpCLENBQVAsRUFBbURFLE1BQW5ELENBQTBETixNQUExRCxDQUFoQixDQUNWLENBRUQsUUFBU0YsU0FBVCxDQUFrQlMsVUFBbEIsQ0FBOEIsQ0FDNUIsTUFBTyxJQUFJQyxNQUFKLENBQVVELFlBQVYsQ0FBd0IsQ0FDN0JFLEdBRDZCLGNBQ3pCQyxNQUR5QixDQUNqQkMsR0FEaUIsQ0FDWixDQUNmLEdBQU1DLE1BQU8sUUFBUEEsS0FBTyxpQ0FBSUMsUUFBSixzQ0FBSUEsUUFBSiw2QkFBaUJmLFVBQVMsaUNBQU0sMkJBQWFjLElBQWIsbUJBQXFCQyxRQUFyQixDQUFOLENBQVQsQ0FBakIsQ0FBYixDQUNBLE9BQVFGLEdBQVIsRUFDRSxJQUFLLE1BQUwsQ0FDRSxNQUFPQyxLQUFQLENBQ0YsSUFBSyxRQUFMLENBQ0UsTUFBTywwQkFBWSxJQUFJSixNQUFKLENBQVUsRUFBVixDQUFjLENBQy9CQyxHQUQrQixjQUMzQkMsTUFEMkIsQ0FDbkJJLElBRG1CLENBQ2IsQ0FDaEIsR0FBSUMsUUFBSixDQUNFRCxLQUFPQyxTQUFTRCxJQUFULEVBQWVFLEtBQWYsQ0FBcUIsR0FBckIsRUFBMEIsQ0FBMUIsQ0FBUCxDQUNGLE1BQU9KLFVBQVNFLElBQVQsQ0FDUixDQUw4QixDQUFkLENBQVosQ0FBUCxDQU9GLFFBQ0UsTUFBT1AsY0FBYUksR0FBYixDQUFQLENBWkosQ0FjRCxDQWpCNEIsQ0FBeEIsQ0FtQlIsQ0FFRCxRQUFTUixnQkFBVCxDQUF5QmMsR0FBekIsQ0FBOEIsQ0FDMUIsR0FBTUMsb0JBQWNELEdBQWQsQ0FBTixDQUNBLElBQUssR0FBTU4sSUFBWCxHQUFrQk8sT0FBbEIsQ0FBMEIsQ0FDdEIsR0FBSUEsT0FBT1AsR0FBUCxJQUFnQlEsU0FBcEIsQ0FDSSxNQUFPRCxRQUFPUCxHQUFQLENBQ2QsQ0FDRCxNQUFPTyxPQUNWIiwiZmlsZSI6ImFjdGl2ZS1lbnp5bWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFbGVtZW50IH0gZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7XG4gIHNoYWxsb3cgYXMgZW56eW1lU2hhbGxvdyxcbiAgbW91bnQgYXMgZW56eW1lTW91bnQsXG4gIHJlbmRlciBhcyBlbnp5bWVSZW5kZXIsXG59IGZyb20gJ2VuenltZSdcblxuZXhwb3J0IGZ1bmN0aW9uIHNoYWxsb3coLi4uYXJncykge1xuICBjb25zdCB3cmFwcGVyID0gZW56eW1lU2hhbGxvdyguLi5hcmdzKVxuICByZXR1cm4gYWN0aXZhdGUoKCkgPT4gd3JhcHBlcilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1vdW50KC4uLmFyZ3MpIHtcbiAgY29uc3Qgd3JhcHBlciA9IGVuenltZU1vdW50KC4uLmFyZ3MpXG4gIHJldHVybiBhY3RpdmF0ZSgoKSA9PiB3cmFwcGVyKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyKC4uLmFyZ3MpIHtcbiAgY29uc3Qgd3JhcHBlciA9IGVuenltZVJlbmRlciguLi5hcmdzKVxuICByZXR1cm4gYWN0aXZhdGUoKCkgPT4gd3JhcHBlcilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VBbmFseXplcihjb21wb25lbnQsIHN0eWxlcywgb3B0cyA9IHt9KSB7XG4gICAgY29uc3QgdHJhbnNmb3JtID0gKHRyYW5zZm9ybSA9PiBwcm9wcyA9PiByZW1vdmVVbmRlZmluZWQodHJhbnNmb3JtKHByb3BzKSkpKG9wdHMudHJhbnNmb3JtIHx8IChwcm9wcyA9PiBwcm9wcykpXG5cbiAgICBjb25zdCByZW5kZXIgPSBvcHRzLnR5cGUgfHwgc2hhbGxvd1xuXG4gICAgcmV0dXJuIChwcm9wcyA9IHt9KSA9PiByZW5kZXIoY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHRyYW5zZm9ybShwcm9wcykpKS5sb29rdXAoc3R5bGVzKVxufVxuXG5mdW5jdGlvbiBhY3RpdmF0ZShmaW5kTXlzZWxmKSB7XG4gIHJldHVybiBuZXcgUHJveHkoZmluZE15c2VsZigpLCB7XG4gICAgZ2V0KHRhcmdldCwga2V5KSB7XG4gICAgICBjb25zdCBmaW5kID0gKC4uLmZpbmRBcmdzKSA9PiBhY3RpdmF0ZSgoKSA9PiBmaW5kTXlzZWxmKCkuZmluZCguLi5maW5kQXJncykpXG4gICAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgICBjYXNlICdmaW5kJzpcbiAgICAgICAgICByZXR1cm4gZmluZFxuICAgICAgICBjYXNlICdsb29rdXAnOlxuICAgICAgICAgIHJldHVybiBjbGFzc01hcCA9PiBuZXcgUHJveHkoe30sIHtcbiAgICAgICAgICAgIGdldCh0YXJnZXQsIG5hbWUpIHtcbiAgICAgICAgICAgICAgaWYgKGNsYXNzTWFwKVxuICAgICAgICAgICAgICAgIG5hbWUgPSBjbGFzc01hcFtuYW1lXS5zcGxpdCgnICcpWzBdXG4gICAgICAgICAgICAgIHJldHVybiBmaW5kKGAuJHtuYW1lfWApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZXR1cm4gZmluZE15c2VsZigpW2tleV1cbiAgICAgIH1cbiAgICB9XG4gIH0pXG59XG5cbmZ1bmN0aW9uIHJlbW92ZVVuZGVmaW5lZChvYmopIHtcbiAgICBjb25zdCByZXN1bHQgPSB7IC4uLm9iaiB9XG4gICAgZm9yIChjb25zdCBrZXkgaW4gcmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHRba2V5XSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgZGVsZXRlIHJlc3VsdFtrZXldXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbn1cbiJdfQ==
