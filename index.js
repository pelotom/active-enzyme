'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};exports.shallow=shallow;exports.mount=mount;exports.render=render;exports.makeRenderer=makeRenderer;var _react=require('react');var _enzyme=require('enzyme');function shallow(elem,opts,classNames){var wrapper=(0,_enzyme.shallow)(elem,opts);return activate(function(){return wrapper},classNames)}function mount(elem,opts,classNames){var wrapper=(0,_enzyme.mount)(elem,opts);return activate(function(){return wrapper},classNames)}function render(elem,opts,classNames){var wrapper=(0,_enzyme.render)(elem,opts);return activate(function(){return wrapper},classNames)}function makeRenderer(component){var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _ref$method=_ref.method;var method=_ref$method===undefined?shallow:_ref$method;var _ref$defaultProps=_ref.defaultProps;var defaultProps=_ref$defaultProps===undefined?{}:_ref$defaultProps;var _ref$transform=_ref.transform;var transform=_ref$transform===undefined?function(props){return props}:_ref$transform;var classNames=_ref.classNames;var enzymeOptions=_ref.enzymeOptions;var doTransform=function doTransform(props){return removeUndefined(transform(props))};return function(){var props=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};props=_extends({},defaultProps,props);return method((0,_react.createElement)(component,doTransform(props)),enzymeOptions,classNames)}}function activate(findMyself,classNames){var find=function find(){for(var _len=arguments.length,findArgs=Array(_len),_key=0;_key<_len;_key++){findArgs[_key]=arguments[_key]}return activate(function(){var _findMyself;return(_findMyself=findMyself()).find.apply(_findMyself,findArgs)},classNames)};var classes=new Proxy({},{get:function get(target,name){if(classNames)name=classNames[name];var selector=name.split(' ').map(function(part){return'.'+part}).join('');return find(selector)}});var overrides={find:find,classes:classes};return new Proxy(findMyself(),{get:function get(target,key){return overrides[key]||findMyself()[key]}})}function removeUndefined(obj){var result=_extends({},obj);for(var key in result){if(result[key]===undefined)delete result[key]}return result}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGl2ZS1lbnp5bWUuanMiXSwibmFtZXMiOlsic2hhbGxvdyIsIm1vdW50IiwicmVuZGVyIiwibWFrZVJlbmRlcmVyIiwiZWxlbSIsIm9wdHMiLCJjbGFzc05hbWVzIiwid3JhcHBlciIsImFjdGl2YXRlIiwiY29tcG9uZW50IiwibWV0aG9kIiwiZGVmYXVsdFByb3BzIiwidHJhbnNmb3JtIiwicHJvcHMiLCJlbnp5bWVPcHRpb25zIiwiZG9UcmFuc2Zvcm0iLCJyZW1vdmVVbmRlZmluZWQiLCJmaW5kTXlzZWxmIiwiZmluZCIsImZpbmRBcmdzIiwiY2xhc3NlcyIsIlByb3h5IiwiZ2V0IiwidGFyZ2V0IiwibmFtZSIsInNlbGVjdG9yIiwic3BsaXQiLCJtYXAiLCJwYXJ0Iiwiam9pbiIsIm92ZXJyaWRlcyIsImtleSIsIm9iaiIsInJlc3VsdCIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6IjRTQVFnQkEsTyxDQUFBQSxPLFNBS0FDLEssQ0FBQUEsSyxTQUtBQyxNLENBQUFBLE0sU0FLQUMsWSxDQUFBQSxZLENBdkJoQiw0QkFFQSw4QkFNTyxRQUFTSCxRQUFULENBQWlCSSxJQUFqQixDQUF1QkMsSUFBdkIsQ0FBNkJDLFVBQTdCLENBQXlDLENBQzlDLEdBQU1DLFNBQVUsb0JBQWNILElBQWQsQ0FBb0JDLElBQXBCLENBQWhCLENBQ0EsTUFBT0csVUFBUyxpQkFBTUQsUUFBTixDQUFULENBQXdCRCxVQUF4QixDQUNSLENBRU0sUUFBU0wsTUFBVCxDQUFlRyxJQUFmLENBQXFCQyxJQUFyQixDQUEyQkMsVUFBM0IsQ0FBdUMsQ0FDNUMsR0FBTUMsU0FBVSxrQkFBWUgsSUFBWixDQUFrQkMsSUFBbEIsQ0FBaEIsQ0FDQSxNQUFPRyxVQUFTLGlCQUFNRCxRQUFOLENBQVQsQ0FBd0JELFVBQXhCLENBQ1IsQ0FFTSxRQUFTSixPQUFULENBQWdCRSxJQUFoQixDQUFzQkMsSUFBdEIsQ0FBNEJDLFVBQTVCLENBQXdDLENBQzdDLEdBQU1DLFNBQVUsbUJBQWFILElBQWIsQ0FBbUJDLElBQW5CLENBQWhCLENBQ0EsTUFBT0csVUFBUyxpQkFBTUQsUUFBTixDQUFULENBQXdCRCxVQUF4QixDQUNSLENBRU0sUUFBU0gsYUFBVCxDQUFzQk0sU0FBdEIsQ0FNQyxvRUFBSixFQUFJLHNCQUxOQyxNQUtNLElBTE5BLE9BS00seUJBTEdWLE9BS0gsd0NBSk5XLFlBSU0sSUFKTkEsYUFJTSwrQkFKUyxFQUlULDJDQUhOQyxTQUdNLElBSE5BLFVBR00sNEJBSE0sc0JBQVNDLE1BQVQsQ0FHTixtQkFGTlAsV0FFTSxNQUZOQSxVQUVNLElBRE5RLGNBQ00sTUFETkEsYUFDTSxDQUNOLEdBQU1DLGFBQWMsUUFBZEEsWUFBYyxjQUFTQyxpQkFBZ0JKLFVBQVVDLEtBQVYsQ0FBaEIsQ0FBVCxDQUFwQixDQUNBLE1BQU8sV0FBZ0IsSUFBZkEsTUFBZSwyREFBUCxFQUFPLENBQ3JCQSxrQkFBYUYsWUFBYixDQUE4QkUsS0FBOUIsRUFDQSxNQUFPSCxRQUFPLHlCQUFjRCxTQUFkLENBQXlCTSxZQUFZRixLQUFaLENBQXpCLENBQVAsQ0FBcURDLGFBQXJELENBQW9FUixVQUFwRSxDQUNSLENBQ0YsQ0FFRCxRQUFTRSxTQUFULENBQWtCUyxVQUFsQixDQUE4QlgsVUFBOUIsQ0FBMEMsQ0FDeEMsR0FBTVksTUFBTyxRQUFQQSxLQUFPLGlDQUFJQyxRQUFKLHNDQUFJQSxRQUFKLDZCQUFpQlgsVUFBUyxpQ0FBTSwyQkFBYVUsSUFBYixtQkFBcUJDLFFBQXJCLENBQU4sQ0FBVCxDQUErQ2IsVUFBL0MsQ0FBakIsQ0FBYixDQUNBLEdBQU1jLFNBQVUsR0FBSUMsTUFBSixDQUFVLEVBQVYsQ0FBYyxDQUM1QkMsR0FENEIsY0FDeEJDLE1BRHdCLENBQ2hCQyxJQURnQixDQUNWLENBQ2hCLEdBQUlsQixVQUFKLENBQ0VrQixLQUFPbEIsV0FBV2tCLElBQVgsQ0FBUCxDQUNGLEdBQU1DLFVBQVdELEtBQUtFLEtBQUwsQ0FBVyxHQUFYLEVBQWdCQyxHQUFoQixDQUFvQixxQkFBUSxJQUFNQyxJQUFkLENBQXBCLEVBQXdDQyxJQUF4QyxDQUE2QyxFQUE3QyxDQUFqQixDQUNBLE1BQU9YLE1BQUtPLFFBQUwsQ0FDUixDQU4yQixDQUFkLENBQWhCLENBUUEsR0FBTUssV0FBWSxDQUFFWixTQUFGLENBQVFFLGVBQVIsQ0FBbEIsQ0FDQSxNQUFPLElBQUlDLE1BQUosQ0FBVUosWUFBVixDQUF3QixDQUM3QkssR0FENkIsY0FDekJDLE1BRHlCLENBQ2pCUSxHQURpQixDQUNaLENBQ2YsTUFBT0QsV0FBVUMsR0FBVixHQUFrQmQsYUFBYWMsR0FBYixDQUMxQixDQUg0QixDQUF4QixDQUtSLENBRUQsUUFBU2YsZ0JBQVQsQ0FBeUJnQixHQUF6QixDQUE4QixDQUMxQixHQUFNQyxvQkFBY0QsR0FBZCxDQUFOLENBQ0EsSUFBSyxHQUFNRCxJQUFYLEdBQWtCRSxPQUFsQixDQUEwQixDQUN0QixHQUFJQSxPQUFPRixHQUFQLElBQWdCRyxTQUFwQixDQUNJLE1BQU9ELFFBQU9GLEdBQVAsQ0FDZCxDQUNELE1BQU9FLE9BQ1YiLCJmaWxlIjoiYWN0aXZlLWVuenltZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQgfSBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHtcbiAgc2hhbGxvdyBhcyBlbnp5bWVTaGFsbG93LFxuICBtb3VudCBhcyBlbnp5bWVNb3VudCxcbiAgcmVuZGVyIGFzIGVuenltZVJlbmRlcixcbn0gZnJvbSAnZW56eW1lJ1xuXG5leHBvcnQgZnVuY3Rpb24gc2hhbGxvdyhlbGVtLCBvcHRzLCBjbGFzc05hbWVzKSB7XG4gIGNvbnN0IHdyYXBwZXIgPSBlbnp5bWVTaGFsbG93KGVsZW0sIG9wdHMpXG4gIHJldHVybiBhY3RpdmF0ZSgoKSA9PiB3cmFwcGVyLCBjbGFzc05hbWVzKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbW91bnQoZWxlbSwgb3B0cywgY2xhc3NOYW1lcykge1xuICBjb25zdCB3cmFwcGVyID0gZW56eW1lTW91bnQoZWxlbSwgb3B0cylcbiAgcmV0dXJuIGFjdGl2YXRlKCgpID0+IHdyYXBwZXIsIGNsYXNzTmFtZXMpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoZWxlbSwgb3B0cywgY2xhc3NOYW1lcykge1xuICBjb25zdCB3cmFwcGVyID0gZW56eW1lUmVuZGVyKGVsZW0sIG9wdHMpXG4gIHJldHVybiBhY3RpdmF0ZSgoKSA9PiB3cmFwcGVyLCBjbGFzc05hbWVzKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZVJlbmRlcmVyKGNvbXBvbmVudCwge1xuICBtZXRob2QgPSBzaGFsbG93LFxuICBkZWZhdWx0UHJvcHMgPSB7fSxcbiAgdHJhbnNmb3JtID0gcHJvcHMgPT4gcHJvcHMsXG4gIGNsYXNzTmFtZXMsXG4gIGVuenltZU9wdGlvbnMsXG59ID0ge30pIHtcbiAgY29uc3QgZG9UcmFuc2Zvcm0gPSBwcm9wcyA9PiByZW1vdmVVbmRlZmluZWQodHJhbnNmb3JtKHByb3BzKSlcbiAgcmV0dXJuIChwcm9wcyA9IHt9KSA9PiB7XG4gICAgcHJvcHMgPSB7IC4uLmRlZmF1bHRQcm9wcywgLi4ucHJvcHMgfVxuICAgIHJldHVybiBtZXRob2QoY3JlYXRlRWxlbWVudChjb21wb25lbnQsIGRvVHJhbnNmb3JtKHByb3BzKSksIGVuenltZU9wdGlvbnMsIGNsYXNzTmFtZXMpXG4gIH1cbn1cblxuZnVuY3Rpb24gYWN0aXZhdGUoZmluZE15c2VsZiwgY2xhc3NOYW1lcykge1xuICBjb25zdCBmaW5kID0gKC4uLmZpbmRBcmdzKSA9PiBhY3RpdmF0ZSgoKSA9PiBmaW5kTXlzZWxmKCkuZmluZCguLi5maW5kQXJncyksIGNsYXNzTmFtZXMpXG4gIGNvbnN0IGNsYXNzZXMgPSBuZXcgUHJveHkoe30sIHtcbiAgICBnZXQodGFyZ2V0LCBuYW1lKSB7XG4gICAgICBpZiAoY2xhc3NOYW1lcylcbiAgICAgICAgbmFtZSA9IGNsYXNzTmFtZXNbbmFtZV1cbiAgICAgIGNvbnN0IHNlbGVjdG9yID0gbmFtZS5zcGxpdCgnICcpLm1hcChwYXJ0ID0+ICcuJyArIHBhcnQpLmpvaW4oJycpXG4gICAgICByZXR1cm4gZmluZChzZWxlY3RvcilcbiAgICB9XG4gIH0pXG4gIGNvbnN0IG92ZXJyaWRlcyA9IHsgZmluZCwgY2xhc3NlcyB9XG4gIHJldHVybiBuZXcgUHJveHkoZmluZE15c2VsZigpLCB7XG4gICAgZ2V0KHRhcmdldCwga2V5KSB7XG4gICAgICByZXR1cm4gb3ZlcnJpZGVzW2tleV0gfHwgZmluZE15c2VsZigpW2tleV1cbiAgICB9XG4gIH0pXG59XG5cbmZ1bmN0aW9uIHJlbW92ZVVuZGVmaW5lZChvYmopIHtcbiAgICBjb25zdCByZXN1bHQgPSB7IC4uLm9iaiB9XG4gICAgZm9yIChjb25zdCBrZXkgaW4gcmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHRba2V5XSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgZGVsZXRlIHJlc3VsdFtrZXldXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbn1cbiJdfQ==
