'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};exports.shallow=shallow;exports.mount=mount;exports.render=render;exports.makeRenderer=makeRenderer;var _react=require('react');var _enzyme=require('enzyme');function shallow(elem,opts,classNames){var wrapper=(0,_enzyme.shallow)(elem,opts);return activate(function(){return wrapper},classNames)}function mount(elem,opts,classNames){var wrapper=(0,_enzyme.mount)(elem,opts);return activate(function(){return wrapper},classNames)}function render(elem,opts,classNames){var wrapper=(0,_enzyme.render)(elem,opts);return activate(function(){return wrapper},classNames)}function makeRenderer(component){var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _ref$method=_ref.method;var method=_ref$method===undefined?shallow:_ref$method;var _ref$defaultProps=_ref.defaultProps;var defaultProps=_ref$defaultProps===undefined?{}:_ref$defaultProps;var _ref$transform=_ref.transform;var transform=_ref$transform===undefined?function(props){return props}:_ref$transform;var classNames=_ref.classNames;var enzymeOptions=_ref.enzymeOptions;var doTransform=function doTransform(props){return removeUndefined(transform(props))};return function(){var props=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};props=_extends({},defaultProps,props);return method((0,_react.createElement)(component,doTransform(props)),enzymeOptions,classNames)}}function activate(findMyself,classNames){var find=function find(){for(var _len=arguments.length,findArgs=Array(_len),_key=0;_key<_len;_key++){findArgs[_key]=arguments[_key]}return activate(function(){var _findMyself;return(_findMyself=findMyself()).find.apply(_findMyself,findArgs)},classNames)};var classes=new Proxy({},{get:function get(target,name){if(classNames)name=classNames[name];var selector=name.split(' ').map(function(part){return'.'+part}).join('');return find(selector)}});var overrides={find:find,classes:classes};return new Proxy(findMyself(),{get:function get(target,key){return overrides[key]||findMyself()[key]}})}function removeUndefined(obj){var result=_extends({},obj);for(var key in result){if(result[key]===undefined)delete result[key]}return result}

//# sourceMappingURL=index.js.map