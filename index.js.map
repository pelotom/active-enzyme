{"version":3,"sources":["src/active-enzyme.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { createElement } from 'react'\n\nimport {\n  shallow as enzymeShallow,\n  mount as enzymeMount,\n  render as enzymeRender,\n} from 'enzyme'\n\nexport function shallow(elem, opts, classNames) {\n  const wrapper = enzymeShallow(elem, opts)\n  return activate(() => wrapper, classNames)\n}\n\nexport function mount(elem, opts, classNames) {\n  const wrapper = enzymeMount(elem, opts)\n  return activate(() => wrapper, classNames)\n}\n\nexport function render(elem, opts, classNames) {\n  const wrapper = enzymeRender(elem, opts)\n  return activate(() => wrapper, classNames)\n}\n\nexport function makeShallowRenderer(component, opts) {\n  return makeRenderer(component, { method: shallow, ...opts })\n}\n\nexport function makeFullRenderer(component, opts) {\n  return makeRenderer(component, { method: mount, ...opts })\n}\n\nexport function makeStaticRenderer(component, opts) {\n  return makeRenderer(component, { method: render, ...opts })\n}\n\nexport function makeRenderer(component, {\n  method,\n  defaultProps = {},\n  transform = props => props,\n  classNames,\n  enzymeOptions,\n} = {}) {\n  const doTransform = props => removeUndefined(transform(props))\n  return (props = {}) => {\n    props = { ...defaultProps, ...props }\n    return method(createElement(component, doTransform(props)), enzymeOptions, classNames)\n  }\n}\n\nfunction activate(findMyself, classNames) {\n  const find = (...findArgs) => activate(() => findMyself().find(...findArgs), classNames)\n  const classes = new Proxy({}, {\n    get(target, name) {\n      if (classNames)\n        name = classNames[name]\n      const selector = name.split(' ').map(part => '.' + part).join('')\n      return find(selector)\n    }\n  })\n  const overrides = { find, classes }\n  return new Proxy(findMyself(), {\n    get(target, key) {\n      return overrides[key] || findMyself()[key]\n    }\n  })\n}\n\nfunction removeUndefined(obj) {\n    const result = { ...obj }\n    for (const key in result) {\n        if (result[key] === undefined)\n            delete result[key]\n    }\n    return result\n}\n"]}